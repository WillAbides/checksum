// Code generated by MockGen. DO NOT EDIT.
// Source: knownsums.go

// Package _mocks is a generated GoMock package.
package _mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSumChecker is a mock of SumChecker interface
type MockSumChecker struct {
	ctrl     *gomock.Controller
	recorder *MockSumCheckerMockRecorder
}

// MockSumCheckerMockRecorder is the mock recorder for MockSumChecker
type MockSumCheckerMockRecorder struct {
	mock *MockSumChecker
}

// NewMockSumChecker creates a new mock instance
func NewMockSumChecker(ctrl *gomock.Controller) *MockSumChecker {
	mock := &MockSumChecker{ctrl: ctrl}
	mock.recorder = &MockSumCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSumChecker) EXPECT() *MockSumCheckerMockRecorder {
	return m.recorder
}

// Sum mocks base method
func (m *MockSumChecker) Sum(hashName string, data []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sum", hashName, data)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Sum indicates an expected call of Sum
func (mr *MockSumCheckerMockRecorder) Sum(hashName, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sum", reflect.TypeOf((*MockSumChecker)(nil).Sum), hashName, data)
}

// Validate mocks base method
func (m *MockSumChecker) Validate(hashName string, wantSum, data []byte) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", hashName, wantSum, data)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Validate indicates an expected call of Validate
func (mr *MockSumCheckerMockRecorder) Validate(hashName, wantSum, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockSumChecker)(nil).Validate), hashName, wantSum, data)
}
